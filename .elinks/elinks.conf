## ELinks 0.11.5 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about
  #  obsolete config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.accesskey 
    #  Options for handling of link access keys.
    #  An HTML document can use the ACCESSKEY attribute to assign
    #  an access key to an element. When an access key is pressed,
    #  the corresponding element will be given focus.

      ## document.browse.accesskey.display [0|1]
      #  Display access key in link info.
      set document.browse.accesskey.display = 0


    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.editor <str>
      #  Path to the executable that ELinks should launch when the user
      #  requests to edit a textarea with an external editor.
      #  If this is blank, ELinks will use the value of the environmental
      #  variable $EDITOR. If $EDITOR is empty or not set, ELinks will then
      #  default to "vi".
      set document.browse.forms.editor = "vim"


    ## document.browse.links 
    #  Options for handling of links to other documents.

      ## document.browse.links.numbering [0|1]
      #  Display numbers next to the links.
      set document.browse.links.numbering = 0

      ## document.browse.links.target_blank <num>
      #  Define how to handle links having target=_blank set:
      #  0 means open link in current tab
      #  1 means open link in new tab in foreground
      #  2 means open link in new tab in background
      #  3 means open link in new window
      set document.browse.links.target_blank = 2

      ## document.browse.links.number_keys_select_link <num>
      #  Number keys select links rather than specify command prefixes. This
      #  is a tristate:
      #  0 means never
      #  1 means if document.browse.links.numbering = 1
      #  2 means always
      set document.browse.links.number_keys_select_link = 1



  ## document.html 
  #  Options concerning the display of HTML pages.

    ## document.html.link_display <num>
    #  How to render <link> tags from the HTML header:
    #  0 is nothing
    #  1 is title
    #  2 is name in addition
    #  3 is hreflang in addition
    #  4 is type in addition
    #  5 is everything
    set document.html.link_display = 2



## terminal 
#  Terminal options.

  ## terminal.xterm 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm.charset <codepage>
    set terminal.xterm.charset = "ISO-8859-1"
    ## terminal.xterm.colors <num>
    set terminal.xterm.colors = 2
    ## terminal.xterm.utf_8_io [0|1]
    set terminal.xterm.utf_8_io = 1
    ## terminal.xterm.type <num>
    set terminal.xterm.type = 2


## ui 
#  User interface options.

  ## ui.clock 
  #  Digital clock in the status bar.

    ## ui.clock.enable [0|1]
    #  Whether to display a digital clock in the status bar.
    set ui.clock.enable = 0


  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will
  #  be extracted from the environment dynamically.
  set ui.language = "System"





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.screen-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.screen-256color.charset <codepage>
    set terminal.screen-256color.charset = "ISO-8859-1"
    ## terminal.screen-256color.colors <num>
    set terminal.screen-256color.colors = 2
    ## terminal.screen-256color.utf_8_io [0|1]
    set terminal.screen-256color.utf_8_io = 1
    ## terminal.screen-256color.type <num>
    set terminal.screen-256color.type = 2





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.colors 
  #  Default document color settings.

    ## document.colors.use_document_colors <num>
    #  Use colors specified in document:
    #  0 is use always the default settings
    #  1 is use document colors if available, except background
    #  2 is use document colors, including background. This can
    #    mostly look very impressive, but some sites will appear
    #    really ugly. Note, that obviously if the background is
    #    not black, it will break the behaviour of transparency.
    set document.colors.use_document_colors = 0
    ## document.colors.text <color|#rrggbb>
    # Default text color.
    set document.colors.text = "#d8dada"
    
    ## document.colors.ensure_contrast [0|1]
    # Makes sure that the back- and foreground color is never equal.
    set document.colors.ensure_contrast = 1




## ui 
#  User interface options.

  ## ui.tabs 
  #  Window tabs settings.

    ## ui.tabs.show_bar <num>
    #  Show tabs bar on the screen:
    #  0 means never
    #  1 means only if two or more tabs are open
    #  2 means always
    set ui.tabs.show_bar = 1






##################################
# Automatically saved keybindings
#

bind "main" "k" = "scroll-up"
bind "main" "j" = "scroll-down"



##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.images 
    #  Options for handling of images.

      ## document.browse.images.show_as_links [0|1]
      #  Display links to images without an alt attribute. If this option
      #  is off, these images are completely invisible.
      set document.browse.images.show_as_links = 0



  ## document.css 
  #  Options concerning how to use CSS for styling documents.

    ## document.css.enable [0|1]
    #  Enable adding of CSS style info to documents.
    set document.css.enable = 1






##################################
# Automatically saved keybindings
#

bind "main" "S" = "toggle-css"



##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.sessions 
  #  Sessions settings.

    ## ui.sessions.auto_restore [0|1]
    #  Automatically restore the session at start.
    #  This feature requires bookmark support.
    set ui.sessions.auto_restore = 1

    ## ui.sessions.auto_save [0|1]
    #  Automatically save the session when quitting.
    #  This feature requires bookmark support.
    set ui.sessions.auto_save = 1

    ## ui.sessions.auto_save_foldername <str>
    #  Name of the bookmarks folder used for auto saving and restoring session.
    #  The name has to be unique. Any folders with the same name will be
    #  deleted.
    #  This only makes sense with bookmark support.
    set ui.sessions.auto_save_foldername = "Auto saved session"

    ## ui.sessions.homepage <str>
    #  The URI to load either at startup time when no URI was given
    #  on the command line or when requested by the goto-url-home action.
    #  Set to "" if the environment variable WWW_HOME should be used
    #  as homepage URI instead.
    set ui.sessions.homepage = "google.com"






##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.sessions 
  #  Sessions settings.

    ## ui.sessions.keep_session_active [0|1]
    #  Keep the session active even if the last terminal exits.
    set ui.sessions.keep_session_active = 0

    ## ui.sessions.snapshot [0|1]
    #  Automatically save a snapshot of all tabs periodically.
    #  This will periodically bookmark the tabs of each terminal in a separate
    #  folder
    #  for recovery after a crash.
    #  
    #  This feature requires bookmark support.
    set ui.sessions.snapshot = 1






##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog.
  #  It makes it possible to define a set of prefixes that will
  #  be expanded if they match a string entered in the goto dialog.
  #  The prefixes can be dumb, meaning that they work only like
  #  URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.dumb 
    #  Dumb prefixes, see enable-dumb description for details.

      ## protocol.rewrite.dumb.arc <str>
      #  Replacement URI for this dumbprefix:
      #  %c in the string means the current URL
      #  %% in the string means '%'
      set protocol.rewrite.dumb.arc = "http://web.archive.org/web/*/%c"

      ## protocol.rewrite.dumb.sab <str>
      #  Replacement URI for this dumbprefix:
      #  %c in the string means the current URL
      #  %% in the string means '%'
      set protocol.rewrite.dumb.sab = "http://192.168.0.166:8081/sabnzbd"


    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.arc <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.arc = "http://web.archive.org/web/*/%s"







##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog.
  #  It makes it possible to define a set of prefixes that will
  #  be expanded if they match a string entered in the goto dialog.
  #  The prefixes can be dumb, meaning that they work only like
  #  URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.del <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.del = "http://delicious.com/slypheed/%s"







##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog.
  #  It makes it possible to define a set of prefixes that will
  #  be expanded if they match a string entered in the goto dialog.
  #  The prefixes can be dumb, meaning that they work only like
  #  URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.dp <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.dp = "http://delicious.com/save?jump=yes&url=%c"

      ## protocol.rewrite.smart.tag <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.tag = "javascript:(function(){f=\'http://delicious.com/save?url=\'+encodeURIComponent(window.location.href)+\'&title=\'+encodeURIComponent(document.title)+\'&v=5&\';a=function(){if(!window.open(f+\'noui=1&jump=doclose\',\'deliciousuiv5\',\'location=yes,links=no,scrollbars=no,toolbar=no,width=550,height=550\'))location.href=f+\'jump=yes\'};if(/Firefox/.test(navigator.userAgent)){setTimeout(a,0)}else{a()}})()"







##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.success_msgbox [0|1]
  #  When you pressed a [ Save ] button in some manager, this option
  #  will make sure that a box confirming success of the operation will
  #  pop up.
  set ui.success_msgbox = 0





##############################
# Automatically saved options
#

## connection 
#  Connection options.

  ## connection.max_connections_to_host <num>
  #  Maximum number of concurrent connections to a given host.
  set connection.max_connections_to_host = 8


## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.images 
    #  Options for handling of images.

      ## document.browse.images.display_style <num>
      #  Display style for image tags when displayed:
      #  0     means always display IMG
      #  1     means always display filename
      #  2     means display alt/title attribute if possible, IMG if not
      #  3     means display alt/title attribute if possible, filename if not
      set document.browse.images.display_style = 3

      ## document.browse.images.filename_maxlen <num>
      #  Maximum length of image filename when displayed:
      #  0     means always display full filename
      #  1-500 means display filename with this maximal length;
      #        if it is longer, the middle is substituted by an asterisk
      set document.browse.images.filename_maxlen = 10

      ## document.browse.images.image_link_tagging <num>
      #  When to enclose image links:
      #  0 means never
      #  1 means never if alt or title are provided (old behavior)
      #  2 means always
      set document.browse.images.image_link_tagging = 1

      ## document.browse.images.show_any_as_links [0|1]
      #  Display links to any images in the document, regardless of them
      #  having an alt attribute or not. If this option is off, the alt
      #  attribute contents is shown, but as normal text, not selectable
      #  as a link.
      set document.browse.images.show_any_as_links = 0



  ## document.css 
  #  Options concerning how to use CSS for styling documents.

    ## document.css.import [0|1]
    #  When enabled any external style sheets that are imported from
    #  either CSS itself using the @import keyword or from the HTML using
    #  <link> tags in the document header will also be downloaded.
    set document.css.import = 1

    ## document.css.stylesheet <str>
    #  The path to the file containing the default user defined
    #  Cascading Style Sheet. It can be used to control the basic
    #  layout of HTML documents. The path is assumed to be relative
    #  to ELinks' home directory.
    #  Leave as "" to use built-in document styling.
    set document.css.stylesheet = ""



## ecmascript 
#  ECMAScript options.

  ## ecmascript.enable [0|1]
  #  Whether to run those scripts inside of documents.
  #set ecmascript.enable = 1


## mime 
#  MIME-related options (handlers of various MIME types).

  ## mime.mimetypes 
  #  Options for the support of mime.types files. These files
  #  can be used to find the content type of a URL by looking at
  #  the extension of the file name.

    ## mime.mimetypes.enable [0|1]
    #  Enable mime.types support.
    set mime.mimetypes.enable = 1



## ui 
#  User interface options.

  ## ui.colors 
  #  Default user interface color settings.

    ## ui.colors.color 
    #  Color settings for color terminal.

      ## ui.colors.color.menu 
      #  Menu bar colors.

        ## ui.colors.color.menu.frame 
        #  Menu frame colors.

          ## ui.colors.color.menu.frame.text <color|#rrggbb>
          #  Default text color.
          set ui.colors.color.menu.frame.text = "blue"

          ## ui.colors.color.menu.frame.background <color|#rrggbb>
          #  Default background color.
          set ui.colors.color.menu.frame.background = "black"









##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.colors 
  #  Default user interface color settings.

    ## ui.colors.color 
    #  Color settings for color terminal.

      ## ui.colors.color.mainmenu 
      #  Main menu bar colors.

        ## ui.colors.color.mainmenu.normal 
        #  Unselected main menu bar item colors.

          ## ui.colors.color.mainmenu.normal.text <color|#rrggbb>
          #  Default text color.
          set ui.colors.color.mainmenu.normal.text = "blue"

          ## ui.colors.color.mainmenu.normal.background <color|#rrggbb>
          #  Default background color.
          set ui.colors.color.mainmenu.normal.background = "black"









##################################
# Automatically saved keybindings
#

bind "main" "y" = "frame-external-command"



##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.show_status_bar [0|1]
  #  Show status bar on the screen.
  set ui.show_status_bar = 0

  ## ui.show_title_bar [0|1]
  #  Show title bar on the screen.
  set ui.show_title_bar = 0


